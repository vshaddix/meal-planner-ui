{"version":3,"sources":["serviceWorker.js","reducers/UnitOfMeasureReducer.js","reducers/IngredientReducer.js","reducers/CategoryReducer.js","reducers/RecipeReducers/NewRecipeReducer.js","reducers/RecipeReducers/RecipeReducer.js","reducers/index.js","reducers/RegisterReducer.js","actions/index.js","reducers/LoginReducer.js","store/ConfigureStore.js","utils/AuthUtil.js","components/MainMenu/MainMenu.js","container/App.js","routes/PrivateRoute.js","routes/IndexRoute.js","services/AuthenticationService.js","actions/AuthenticationActions.js","components/LoginPage.js","components/RegisterPage.js","components/DashboardPage.js","components/UnitOfMeasuresList/UnitOfMeasuresList.js","services/UnitOfMeasureService.js","actions/UnitOfMeasureActions.js","components/UnitOfMeasureCreateForm/UnitOfMeasureCreateForm.js","components/UomPage.js","components/IngredientsList/IngredientsList.js","services/IngredientService.js","actions/IngredientsActions.js","components/IngredientsCreateForm/IngredientsCreateForm.js","components/IngredientsPage.js","components/CategoriesList/CategoriesList.js","services/BaseService.js","services/CategoryService.js","actions/CategoriesActions.js","components/CategoriesCreateForm/CategoriesCreateForm.js","components/CategoriesPage.js","services/RecipeService.js","components/SelectCategories/SelectCategories.js","actions/RecipeActions/RecipeActions.js","components/SelectIngredients/SelectIngredients.js","actions/RecipeActions/NewRecipeActions.js","components/RecipeCreateForm/RecipeCreateForm.js","components/RecipeItem/RecipeItem.js","components/RecipesList/RecipesList.js","components/RecipePage.js","index.js","routes/index.js"],"names":["Boolean","window","location","hostname","match","initialState","uoms","responseMessage","successfulRequest","ingredients","categories","name","steps","photo","isCreated","hasError","rootReducer","combineReducers","register","state","arguments","length","undefined","action","response","payload","type","Object","objectSpread","login","unitOfMeasure","concat","toConsumableArray","unit_of_measure","message","ingredient","category","NewRecipeReducer","newCategory","public_id","remainingCategories","filter","addedCat","newIngredient","value","quantity","newIngredients","ingredientObject","RecipeReducer","data","configureStore","createStore","applyMiddleware","thunk","isLoggedIn","localStorage","getItem","getAuthenticationToken","MainMenu","react_default","a","createElement","className","react_router_dom","activeClassName","to","Component","App","mainMenu","components_MainMenu_MainMenu","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","props","style","marginLeft","marginRight","paddingTop","pathname","from","IndexRoute","registerUserService","request","parameters","method","headers","Content-Type","body","JSON","stringify","fetch","then","json","loginUserService","registerUserAction","user","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","loginUserAction","_ref2","_callee2","_context2","_x2","LoginPage","onHandleLogin","event","preventDefault","email","target","password","_this","isSuccess","hasOwnProperty","status","removeItem","setItem","Authorization","onSubmit","connect","RegisterPage","onHandleRegistration","username","RegisterViewContainer","DashboardPage","UnitOfMeasuresList","map","uom","key","defaultProps","UnitOfMeasuresListContainer","UnitOfMeasureService","apiBaseUrl","classCallCheck","apiUrl","bind","createNewUom","fetchAllUnitsOfMeasure","url","options","Accept","fetchUnitsOfMeasure","service","UnitOfMeasureCreateForm","possibleConstructorReturn","getPrototypeOf","call","uomName","assertThisInitialized","_this2","htmlFor","onChange","e","setState","onClick","UnitOfMeasureCreateFormContainer","UnitOfMeasurePageContainer","useEffect","components_UnitOfMeasureCreateForm_UnitOfMeasureCreateForm","IngredientsList","IngredientsListContainer","IngredientService","createNewIngredient","fetchAllIngredients","fetchIngredients","IngredientsCreateForm","ingredientName","IngredientsCreateFormContainer","IngredientsPageContainer","components_IngredientsCreateForm_IngredientsCreateForm","CategoriesList","CategoriesListContainer","BaseService","apiUri","createNew","fetchAll","entityData","propTypes","string","isRequired","CategoryService","fetchCategories","CategoriesCreateForm","categoryName","createNewCategory","CategoriesCreateFormContainer","CategoriesPageContainer","components_CategoriesCreateForm_CategoriesCreateForm","SelectCategories","selectCategory","removeCategoryFromSelected","_useState","useState","_useState2","slicedToArray","selectedCategories","setSelectedCategories","setSelected","categoryId","find","cat","id","onSelect","toBeRemovedCategory","newSelectedCategories","removeFromSelected","SelectCategoriesContainer","addCategoryToNewRecipe","removeCategoryFromNewRecipe","SelectIngredients","unitsOfMeasure","addNewIngredient","selectedIngredient","setSelectedIngredient","_useState3","_useState4","selectedUom","setSelectedUom","_useState5","_useState6","setQuantity","ingredientId","setSelectedIng","uomId","setSelectedUnit","qty","SelectIngredientsContainer","addIngredientToNewRecipe","RecipeCreateForm","ingredientsCount","title","addTitleAction","addTitleToNewRecipe","addStepsToNewRecipe","createRecipe","createRecipeButtonHandler","x","push","setTitle","createIngredients","cols","rows","onInput","setSteps","RecipeCreateFormContainer","recipe","RecipeService","RecipeItem","ingredientsList","ingredientData","categoriesList","split","step","RecipesList","recipesList","recipes","components_RecipeItem_RecipeItem","RecipePageContainer","fetchRecipes","addNewRecipe","setAddNewRecipe","components_RecipesList_RecipesList","components_RecipeCreateForm_RecipeCreateForm","store","ReactDOM","es","routes_IndexRoute","path","routes_PrivateRoute","UnitOfMeasurePage","IngredientsPage","CategoriesPage","RecipePage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad5df6c3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../actions';\n\nconst initialState = {\n  uoms: [],\n  responseMessage: '',\n  successfulRequest: null,\n};\n\nexport default function(state = initialState, action) {\n  let response = action.payload;\n\n  switch(action.type) {\n    case types.FETCH_ALL_UNITS_OF_MEASURE:\n      return { ...state, uoms: response };\n    case types.CREATE_UNIT_OF_MEASURE:\n      return { ...state,\n        uoms: [\n          ...state.uoms,\n          response.unit_of_measure\n        ]\n      };\n    case types.CREATE_UNIT_OF_MEASURE_ERROR:\n      return { ...state, responseMessage: response.message, successfulRequest: false};\n    case types.CREATE_UNIT_OF_MEASURE_SUCCESS:\n      return { ...state, responseMessage: response.message, successfulRequest: true};\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions';\n\nconst initialState = {\n  ingredients: [],\n  responseMessage: '',\n  successfulRequest: null,\n};\n\nexport default function(state = initialState, action) {\n  let response = action.payload;\n\n  switch(action.type) {\n    case types.FETCH_ALL_INGREDIENTS:\n      return { ...state, ingredients: response };\n    case types.CREATE_INGREDIENT:\n      return { ...state,\n        ingredients: [\n          ...state.ingredients,\n          response.ingredient\n        ]\n      };\n    case types.CREATE_INGREDIENT_ERROR:\n      return { ...state, responseMessage: response.message, successfulRequest: false};\n    case types.CREATE_INGREDIENT_SUCCESS:\n      return { ...state, responseMessage: response.message, successfulRequest: true};\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions';\n\nconst initialState = {\n  categories: [],\n  responseMessage: '',\n  successfulRequest: null,\n};\n\nexport default function(state = initialState, action) {\n  let response = action.payload;\n\n  switch(action.type) {\n    case types.FETCH_ALL_CATEGORIES:\n      return { ...state, categories: response };\n    case types.CREATE_CATEGORY:\n      return { ...state,\n        categories: [\n          ...state.categories,\n          response.category\n        ]\n      };\n    case types.CREATE_CATEGORY_ERROR:\n      return { ...state, responseMessage: response.message, successfulRequest: false};\n    case types.CREATE_CATEGORY_SUCCESS:\n      return { ...state, responseMessage: response.message, successfulRequest: true};\n    default:\n      return state;\n  }\n}\n","import * as types from '../../actions/index';\n\nconst initialState = {\n  name: \"\",\n  steps: \"\",\n  photo: \"\",\n  ingredients: [\n    // example ingredient/uom/value combination\n    // {\n    //   \"ingredient\": {\n    //     \"name\": \"string\",\n    //     \"public_id\": \"string\"\n    //   },\n    //   \"unit_of_measure\": {\n    //     \"name\": \"string\",\n    //     \"public_id\": \"string\"\n    //   },\n    //   \"value\": 0\n    // }\n  ],\n  categories: [\n    // example category\n    // {\n    //   \"name\": \"string\",\n    //   \"public_id\": \"string\"\n    // }\n  ],\n  isCreated: false,\n  hasError: false,\n};\n\nexport default function(state = initialState, action) {\n  let response = action.payload;\n\n  switch(action.type) {\n    case types.CREATE_CATEGORY_SUCCESS:\n      return { ...state, isCreated: true, hasError: false };\n\n    case types.CREATE_CATEGORY_ERROR:\n      return { ...state, isCreated: false, hasError: true };\n\n    case types.ADD_STEPS_TO_NEW_RECIPE:\n      return { ...state, steps:response};\n\n    case types.ADD_TITLE_TO_NEW_RECIPE:\n      return { ...state, name: response};\n\n    case types.ADD_CATEGORY_TO_NEW_RECIPE:\n      const newCategory = {\n        name: response.name,\n        public_id: response.public_id,\n      };\n      const categories = [ ...state.categories, newCategory ];\n      return { ...state, categories };\n\n    case types.REMOVE_CATEGORY_FROM_NEW_RECIPE:\n      const remainingCategories = state.categories.filter(addedCat => addedCat.public_id !== response.public_id);\n      return { ...state, categories: remainingCategories };\n\n    case types.ADD_INGREDIENT_TO_NEW_RECIPE:\n      const newIngredient = {\n        ingredient: response.ingredient,\n        unit_of_measure: response.unitOfMeasure,\n        value: response.quantity\n      };\n      const newIngredients = state.ingredients.filter(ingredientObject => ingredientObject.ingredient.public_id !== response.ingredient.public_id);\n      const ingredients = [ ...newIngredients, newIngredient ];\n      return { ...state, ingredients };\n\n    default:\n      return state;\n  }\n}\n","import * as types from '../../actions/index';\n\nconst initialState = [\n  // {\n  //   name: \"\",\n  //   steps: \"\",\n  //   photo: \"\",\n  //   ingredients: [\n  //     // example ingredient/uom/value combination\n  //     // {\n  //     //   \"ingredient\": {\n  //     //     \"name\": \"string\",\n  //     //     \"public_id\": \"string\"\n  //     //   },\n  //     //   \"unit_of_measure\": {\n  //     //     \"name\": \"string\",\n  //     //     \"public_id\": \"string\"\n  //     //   },\n  //     //   \"value\": 0\n  //     // }\n  //   ],\n  //   categories: [\n  //     // example category\n  //     // {\n  //     //   \"name\": \"string\",\n  //     //   \"public_id\": \"string\"\n  //     // }\n  //   ],\n  // }\n];\n\nexport default function(state = initialState, action) {\n  let response = action.payload;\n\n  switch(action.type) {\n    case types.FETCH_ALL_RECIPES:\n      return [ ...response.data ];\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport register from './RegisterReducer';\nimport login from './LoginReducer';\nimport unitOfMeasure from './UnitOfMeasureReducer';\nimport ingredients from './IngredientReducer';\nimport categories from './CategoryReducer';\nimport NewRecipeReducer from './RecipeReducers/NewRecipeReducer';\nimport RecipeReducer from './RecipeReducers/RecipeReducer';\n\nconst rootReducer = combineReducers({\n  register, login, unitOfMeasure, ingredients, categories, NewRecipeReducer, RecipeReducer\n});\n\nexport default rootReducer;\n","import * as types from '../actions';\n\nexport default function(state = [], action) {\n  let response = action.payload;\n\n  switch(action.type) {\n    case types.REGISTER_USER:\n      return { ...state, response };\n    default:\n      return state;\n  }\n}\n","export const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_ERROR = 'REGISTER_USER_ERROR';\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_ERROR = 'LOGIN_USER_ERROR';\n\nexport const CREATE_UNIT_OF_MEASURE = 'CREATE_UNIT_OF_MEASURE';\nexport const CREATE_UNIT_OF_MEASURE_SUCCESS = 'CREATE_UNIT_OF_MEASURE_SUCCESS';\nexport const CREATE_UNIT_OF_MEASURE_ERROR = 'CREATE_UNIT_OF_MEASURE_ERROR';\nexport const FETCH_ALL_UNITS_OF_MEASURE = 'FETCH_ALL_UNITS_OF_MEASURE';\n\nexport const CREATE_INGREDIENT = 'CREATE_INGREDIENT';\nexport const CREATE_INGREDIENT_SUCCESS = 'CREATE_INGREDIENT_SUCCESS';\nexport const CREATE_INGREDIENT_ERROR = 'CREATE_INGREDIENT_ERROR';\nexport const FETCH_ALL_INGREDIENTS = 'FETCH_ALL_INGREDIENTS';\n\nexport const CREATE_CATEGORY = 'CREATE_CATEGORY';\nexport const CREATE_CATEGORY_SUCCESS = 'CREATE_CATEGORY_SUCCESS';\nexport const CREATE_CATEGORY_ERROR = 'CREATE_CATEGORY_ERROR';\n\nexport const FETCH_ALL_CATEGORIES = 'FETCH_ALL_CATEGORIES';\n\n\nexport const ADD_CATEGORY_TO_NEW_RECIPE = 'ADD_CATEGORY_TO_NEW_RECIPE';\nexport const REMOVE_CATEGORY_FROM_NEW_RECIPE = 'REMOVE_CATEGORY_FROM_NEW_RECIPE';\n\nexport const ADD_INGREDIENT_TO_NEW_RECIPE = 'ADD_INGREDIENT_TO_NEW_RECIPE';\nexport const REMOVE_INGREDIENT_FROM_NEW_RECIPE = 'REMOVE_INGREDIENT_FROM_NEW_RECIPE';\n\nexport const ADD_TITLE_TO_NEW_RECIPE = 'ADD_TITLE_TO_NEW_RECIPE';\nexport const ADD_STEPS_TO_NEW_RECIPE = 'ADD_STEPS_TO_NEW_RECIPE';\nexport const CREATE_RECIPE_ERROR = 'CREATE_RECIPE_ERROR';\nexport const CREATE_RECIPE_SUCCESS = 'CREATE_RECIPE_SUCCESS';\nexport const CREATE_RECIPE = 'CREATE_RECIPE';\n\nexport const FETCH_ALL_RECIPES = 'FETCH_ALL_RECIPES';\n","import * as types from '../actions';\n\nexport default function(state = [], action) {\n  const response = action.payload;\n\n  switch(action.type) {\n    case types.LOGIN_USER:\n      return { ...state, response };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers';\n\nconst configureStore = () => {\n\n  return {\n    ...createStore(rootReducer, applyMiddleware(thunk)),\n  }\n};\n\nexport default configureStore;\n","export function isLoggedIn() {\n  return Boolean(localStorage.getItem('token'));\n}\n\nexport function getAuthenticationToken() {\n  return localStorage.getItem('token')\n}\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './MainMenu.scss';\n\nclass MainMenu extends Component {\n  render () {\n    return (\n      <ul className=\"navigation\">\n        <li><NavLink activeClassName=\"active\" to='/dashboard'>Home</NavLink></li>\n        <li><NavLink activeClassName=\"active\" to='/uoms'>Unit of measures</NavLink></li>\n        <li><NavLink activeClassName=\"active\" to='/ingredients'>Ingredients</NavLink></li>\n        <li><NavLink activeClassName=\"active\" to='/categories'>Categories</NavLink></li>\n        <li><NavLink activeClassName=\"active\" to='/recipes'>Recipes</NavLink></li>\n      </ul>\n    );\n  }\n}\n\nexport default MainMenu;\n","import React, { Component } from 'react';\nimport { isLoggedIn } from '../utils/AuthUtil';\nimport MainMenu from \"../components/MainMenu/MainMenu\";\n\nclass App extends Component {\n  render() {\n    const mainMenu = isLoggedIn() ? (<MainMenu/>) : '';\n    return (\n      <div>\n        <h3>Meal planning web software</h3>\n        <div>{mainMenu}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport { isLoggedIn } from '../utils/AuthUtil';\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return isLoggedIn() ? (\n          <div style={{marginLeft:'5%', marginRight: '5%', paddingTop:'3%'}}>\n            <Component {...props} />\n          </div>\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }}\n    />\n  )\n};\n\nexport default PrivateRoute;\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst IndexRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return props.location.pathname === '/' ? (\n          <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />\n        ) : (\n          <Component {...props} />\n        )\n      }}\n    />\n  )\n};\n\nexport default IndexRoute;\n","export const registerUserService = (request) => {\n  const REGISTER_API_ENDPOINT = 'https://meal-planner-api-python.herokuapp.com/user/';\n\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request)\n  };\n\n  return fetch(REGISTER_API_ENDPOINT, parameters)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return json;\n    });\n};\n\nexport const loginUserService = (request) => {\n  const LOGIN_API_ENDPOINT = 'https://meal-planner-api-python.herokuapp.com/auth/login';\n\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request)\n  };\n\n  return fetch(LOGIN_API_ENDPOINT, parameters)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return json;\n    });\n};\n","import * as types from './index';\nimport { registerUserService, loginUserService } from '../services/AuthenticationService';\n\nexport const registerUserAction = user => {\n  return async function (dispatch) {\n    const response = await registerUserService(user);\n\n    dispatch({\n      type: types.REGISTER_USER,\n      payload: response\n    });\n  }\n};\n\nexport const loginUserAction = user => {\n  return async function (dispatch) {\n    const response = await loginUserService(user);\n\n    dispatch({\n      type: types.LOGIN_USER,\n      payload: response\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { loginUserAction } from '../actions/AuthenticationActions';\n\nclass LoginPage extends Component {\n  onHandleLogin = (event) => {\n    event.preventDefault();\n\n    let email = event.target.email.value;\n    let password = event.target.password.value;\n\n    const data = {\n      email, password\n    };\n\n    this.props.dispatch(loginUserAction(data));\n  };\n\n  render() {\n    let isSuccess, message;\n\n    if (this.props.response.login.hasOwnProperty('response')) {\n      isSuccess = this.props.response.login.response.status;\n      message = this.props.response.login.response.message;\n\n      if (isSuccess) {\n        localStorage.removeItem('token');\n        localStorage.setItem('token', this.props.response.login.response.Authorization);\n        return (\n          <Redirect to={{ pathname: '/dashboard', state: { from: this.props.location } }} />\n        );\n      }\n    }\n\n    return (\n      <div>\n        <h3>Login Page</h3>\n        {!isSuccess ? <div>{message}</div> : ''}\n        <form onSubmit={this.onHandleLogin}>\n          <div>\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <div>\n            <button>Login</button>\n          </div>\n        </form>\n        Don't have account? <Link to='register'>Register here</Link>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (response) => ({response});\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { registerUserAction } from '../actions/AuthenticationActions';\n\nclass RegisterPage extends Component {\n  onHandleRegistration = (event) => {\n    event.preventDefault();\n\n    let username = event.target.name.value;\n    let email = event.target.email.value;\n    let password = event.target.password.value;\n\n    const data = {\n      username, email, password\n    };\n\n    this.props.dispatch(registerUserAction(data));\n  };\n\n  render() {\n    let message, isSuccess;\n\n    if (this.props.response.register.hasOwnProperty('response')) {\n      isSuccess = this.props.response.register.response.status;\n      if (isSuccess) {\n        localStorage.removeItem('token');\n        localStorage.setItem('token', this.props.response.register.response.Authorization);\n        return (\n          <Redirect to={{ pathname: '/dashboard', state: { from: this.props.location } }} />\n        );\n      }\n      message = this.props.response.register.response.message;\n    }\n\n    return (\n      <div>\n        <h3>RegisterPage</h3>\n        {!isSuccess ? <div>{message}</div> : ''}\n        <form onSubmit={this.onHandleRegistration}>\n          <div>\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" />\n          </div>\n          <div>\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <div>\n            <button>Register</button>\n          </div>\n        </form>\n        Already have account? <Link to='login'>Login here</Link>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (response) => ({\n  response\n});\n\n\nconst RegisterViewContainer = connect(\n  mapStateToProps,\n  null,\n)(RegisterPage);\n\n\nexport default RegisterViewContainer;\n\n","import React, { Component } from 'react';\n\nclass DashboardPage extends Component {\n  render() {\n    return (\n      <div>\n        Dashboard\n      </div>\n    );\n  }\n}\n\nexport default DashboardPage;\n","import React from 'react';\nimport './UnitOfMeasuresList.scss';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst UnitOfMeasuresList = ({ uoms }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            Name\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n      {uoms.map((uom) => (\n        <tr key={uom.name}>\n          <td>{uom.name}</td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n\n\nUnitOfMeasuresList.propTypes = {\n  uoms: propTypes.array.isRequired\n};\n\nUnitOfMeasuresList.defaultProps = {\n  uoms: [],\n};\n\nconst mapStateToProps = (dispatch) => ({\n    uoms: dispatch.unitOfMeasure.uoms,\n});\n\nconst UnitOfMeasuresListContainer = connect(\n  mapStateToProps,\n  null,\n)(UnitOfMeasuresList);\n\nexport default UnitOfMeasuresList;\n\nexport { UnitOfMeasuresListContainer };\n","import { getAuthenticationToken, isLoggedIn } from '../utils/AuthUtil';\n\nexport default class UnitOfMeasureService {\n  constructor(apiBaseUrl) {\n    this.apiUrl = (apiBaseUrl || 'https://meal-planner-api-python.herokuapp.com') + '/uom/';\n    this.fetch = this.fetch.bind(this);\n    this.createNewUom = this.createNewUom.bind(this);\n    this.fetchAllUnitsOfMeasure = this.fetchAllUnitsOfMeasure.bind(this);\n  }\n\n  createNewUom(unitOfMeasure) {\n    return this.fetch(this.apiUrl, {\n      method: 'POST',\n      body: JSON.stringify(unitOfMeasure)\n    });\n  }\n\n  fetchAllUnitsOfMeasure() {\n    return this.fetch(this.apiUrl, {\n      method: 'GET'\n    });\n  }\n\n  fetch(url, options) {\n    const headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (isLoggedIn()) {\n      headers['Authorization'] = getAuthenticationToken()\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(response => response.json())\n  }\n}","import * as types from './index';\nimport UnitOfMeasureService from '../services/UnitOfMeasureService';\n\nexport const createUnitOfMeasure = unitOfMeasure => {\n  return async function (dispatch) {\n    const service = new UnitOfMeasureService();\n    const response = await service.createNewUom(unitOfMeasure);\n    const requestFailed = response.status === 'fail';\n    if (requestFailed) {\n      dispatch({\n        type: types.CREATE_UNIT_OF_MEASURE_ERROR,\n        payload: response\n      });\n    } else {\n      dispatch({\n        type: types.CREATE_UNIT_OF_MEASURE_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: types.CREATE_UNIT_OF_MEASURE,\n        payload: response\n      });\n    }\n  }\n};\n\nexport const fetchUnitsOfMeasure = () => {\n  return async function (dispatch) {\n    const service = new UnitOfMeasureService();\n    const response = await service.fetchAllUnitsOfMeasure();\n\n    dispatch({\n      type: types.FETCH_ALL_UNITS_OF_MEASURE,\n      payload: response.data\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createUnitOfMeasure } from '../../actions/UnitOfMeasureActions';\n\nclass UnitOfMeasureCreateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uomName: ''\n    };\n    this.createNewUom = this.createNewUom.bind(this);\n  }\n\n  createNewUom() {\n    const name = this.state.uomName;\n\n    const data = {\n      name\n    };\n\n    this.props.dispatch(createUnitOfMeasure(data));\n  }\n\n  render() {\n    let message = '';\n\n    if (this.props.response.unitOfMeasure.hasOwnProperty('responseMessage')) {\n      message = this.props.response.unitOfMeasure.responseMessage;\n    }\n\n    return (\n      <div>\n          <h4>Add a new unit of measure</h4>\n          <h5>{message}</h5>\n        <div className=\"uom-form\">\n          <label htmlFor=\"uom-name\">Name:</label>\n          <input onChange={(e) => this.setState({uomName: e.target.value})} value={this.state.uomName} name={\"uom-name\"} type=\"text\"/>\n          <button onClick={this.createNewUom}>Create</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (response) => ({\n  response\n});\n\n\nconst UnitOfMeasureCreateFormContainer = connect(\n  mapStateToProps,\n  null,\n)(UnitOfMeasureCreateForm);\n\nexport default UnitOfMeasureCreateFormContainer;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { UnitOfMeasuresListContainer } from './UnitOfMeasuresList/UnitOfMeasuresList';\nimport UnitOfMeasureCreateForm from './UnitOfMeasureCreateForm/UnitOfMeasureCreateForm';\nimport { fetchUnitsOfMeasure } from '../actions/UnitOfMeasureActions';\n\nconst UnitOfMeasurePage = ({ fetchUnitsOfMeasure }) => {\n  useEffect(() => {\n    fetchUnitsOfMeasure();\n  });\n\n  return (\n    <div>\n      <h2>\n        Unit of measures\n      </h2>\n      <UnitOfMeasureCreateForm/>\n      <div>\n        <UnitOfMeasuresListContainer/>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchUnitsOfMeasure: () => {\n    dispatch(fetchUnitsOfMeasure());\n  },\n});\n\nconst UnitOfMeasurePageContainer = connect(\n  null,\n  mapDispatchToProps,\n)(UnitOfMeasurePage);\n\nexport default UnitOfMeasurePageContainer;","import React from 'react';\nimport './IngredientsList.scss';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst IngredientsList = ({ ingredients }) => {\n  return (\n    <table>\n      <thead>\n      <tr>\n        <th>\n          Name\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      {ingredients.map((ingredient) => (\n        <tr key={ingredient.name}>\n          <td>{ingredient.name}</td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n\n\nIngredientsList.propTypes = {\n  ingredients: propTypes.array.isRequired\n};\n\nIngredientsList.defaultProps = {\n  ingredients: [],\n};\n\nconst mapStateToProps = (dispatch) => ({\n  ingredients: dispatch.ingredients.ingredients,\n});\n\nconst IngredientsListContainer = connect(\n  mapStateToProps,\n  null,\n)(IngredientsList);\n\nexport default IngredientsList;\n\nexport { IngredientsListContainer };\n","import { getAuthenticationToken, isLoggedIn } from '../utils/AuthUtil';\n\nexport default class IngredientService {\n  constructor(apiBaseUrl) {\n    this.apiUrl = (apiBaseUrl || 'https://meal-planner-api-python.herokuapp.com') + '/ingredient/';\n    this.fetch = this.fetch.bind(this);\n    this.createNewIngredient = this.createNewIngredient.bind(this);\n    this.fetchAllIngredients = this.fetchAllIngredients.bind(this);\n  }\n\n  createNewIngredient(ingredient) {\n    return this.fetch(this.apiUrl, {\n      method: 'POST',\n      body: JSON.stringify(ingredient)\n    });\n  }\n\n  fetchAllIngredients() {\n    return this.fetch(this.apiUrl, {\n      method: 'GET'\n    });\n  }\n\n  fetch(url, options) {\n    const headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (isLoggedIn()) {\n      headers['Authorization'] = getAuthenticationToken()\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(response => response.json())\n  }\n}","import * as types from './index';\nimport IngredientService from '../services/IngredientService';\n\nexport const createIngredient = ingredient => {\n  return async function (dispatch) {\n    const service = new IngredientService();\n    const response = await service.createNewIngredient(ingredient);\n    const requestFailed = response.status === 'fail';\n    if (requestFailed) {\n      dispatch({\n        type: types.CREATE_INGREDIENT_ERROR,\n        payload: response\n      });\n    } else {\n      dispatch({\n        type: types.CREATE_INGREDIENT_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: types.CREATE_INGREDIENT,\n        payload: response\n      });\n    }\n  }\n};\n\nexport const fetchIngredients = () => {\n  return async function (dispatch) {\n    const service = new IngredientService();\n    const response = await service.fetchAllIngredients();\n\n    dispatch({\n      type: types.FETCH_ALL_INGREDIENTS,\n      payload: response.data\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createIngredient } from '../../actions/IngredientsActions';\n\nclass IngredientsCreateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientName: ''\n    };\n    this.createNewIngredient = this.createNewIngredient.bind(this);\n  }\n\n  createNewIngredient() {\n    const name = this.state.ingredientName;\n\n    const data = {\n      name\n    };\n\n    this.props.dispatch(createIngredient(data));\n  }\n\n  render() {\n    let message = '';\n\n    if (this.props.response.ingredients.hasOwnProperty('responseMessage')) {\n      message = this.props.response.ingredients.responseMessage;\n    }\n\n    return (\n      <div>\n        <h4>Add a new ingredient</h4>\n        <h5>{message}</h5>\n        <div className=\"ingredient-form\">\n          <label htmlFor=\"ingredient-name\">Name:</label>\n          <input onChange={(e) => this.setState({ingredientName: e.target.value})} value={this.state.ingredientName} name={\"ingredient-name\"} type=\"text\"/>\n          <button onClick={this.createNewIngredient}>Create</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (response) => ({\n  response\n});\n\nconst IngredientsCreateFormContainer = connect(\n  mapStateToProps,\n  null,\n)(IngredientsCreateForm);\n\nexport default IngredientsCreateFormContainer;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { IngredientsListContainer } from './IngredientsList/IngredientsList';\nimport IngredientsCreateFormContainer from './IngredientsCreateForm/IngredientsCreateForm';\nimport { fetchIngredients } from '../actions/IngredientsActions';\n\nconst IngredientsPage = ({ fetchIngredients }) => {\n  useEffect(() => {\n    fetchIngredients();\n  });\n\n  return (\n    <div>\n      <h2>\n        Ingredients\n      </h2>\n      <IngredientsCreateFormContainer/>\n      <div>\n        <IngredientsListContainer/>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchIngredients: () => {\n    dispatch(fetchIngredients());\n  },\n});\n\nconst IngredientsPageContainer = connect(\n  null,\n  mapDispatchToProps,\n)(IngredientsPage);\n\nexport default IngredientsPageContainer;","import React from 'react';\nimport './CategoriesList.scss';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst CategoriesList = ({ categories }) => {\n  return (\n    <table>\n      <thead>\n      <tr>\n        <th>\n          Name\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      {categories.map((category) => (\n        <tr key={category.name}>\n          <td>{category.name}</td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n\n\nCategoriesList.propTypes = {\n  categories: propTypes.array.isRequired\n};\n\nCategoriesList.defaultProps = {\n  categories: [],\n};\n\nconst mapStateToProps = (dispatch) => ({\n  categories: dispatch.categories.categories,\n});\n\nconst CategoriesListContainer = connect(\n  mapStateToProps,\n  null,\n)(CategoriesList);\n\nexport default CategoriesList;\n\nexport { CategoriesListContainer };\n","import { getAuthenticationToken, isLoggedIn } from '../utils/AuthUtil';\nimport propTypes from 'prop-types';\n\nclass BaseService {\n  constructor(apiBaseUrl) {\n    this.apiBaseUrl = (apiBaseUrl || 'https://meal-planner-api-python.herokuapp.com');\n    this.apiUri = '';\n    this.fetch = this.fetch.bind(this);\n    this.createNew = this.createNew.bind(this);\n    this.fetchAll = this.fetchAll.bind(this);\n  }\n\n  get apiUrl() {\n    return `${this.apiBaseUrl}/${this.apiUri}`;\n  }\n\n  createNew(entityData) {\n    return this.fetch(this.apiUrl, {\n      method: 'POST',\n      body: JSON.stringify(entityData)\n    });\n  }\n\n  fetchAll() {\n    return this.fetch(this.apiUrl, {\n      method: 'GET'\n    });\n  }\n\n  //TODO move this function to a new folder called API with axios integrated.\n  fetch(url, options) {\n    const headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (isLoggedIn()) {\n      headers['Authorization'] = getAuthenticationToken()\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(response => response.json())\n  }\n}\n\nBaseService.propTypes = {\n  apiUri: propTypes.string.isRequired\n};\n\nexport default BaseService;\n","import BaseService from './BaseService';\n\nexport default class CategoryService extends BaseService {\n  constructor() {\n    super(...arguments);\n    this.apiUri = 'category/';\n  }\n}\n","import * as types from './index';\nimport CategoryService from '../services/CategoryService';\n\nexport const createCategory = category => {\n  return async function (dispatch) {\n    const service = new CategoryService();\n    const response = await service.createNew(category);\n    const requestFailed = response.status === 'fail';\n    if (requestFailed) {\n      dispatch({\n        type: types.CREATE_CATEGORY_ERROR,\n        payload: response\n      });\n    } else {\n      dispatch({\n        type: types.CREATE_CATEGORY_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: types.CREATE_CATEGORY,\n        payload: response\n      });\n    }\n  }\n};\n\nexport const fetchCategories = () => {\n  return async function (dispatch) {\n    const service = new CategoryService();\n    const response = await service.fetchAll();\n\n    dispatch({\n      type: types.FETCH_ALL_CATEGORIES,\n      payload: response.data\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createCategory } from '../../actions/CategoriesActions';\n\nclass CategoriesCreateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryName: ''\n    };\n    this.createNewCategory = this.createNewCategory.bind(this);\n  }\n\n  createNewCategory() {\n    const name = this.state.categoryName;\n\n    const data = {\n      name\n    };\n\n    this.props.dispatch(createCategory(data));\n  }\n\n  render() {\n    let message = '';\n\n    if (this.props.response.categories.hasOwnProperty('responseMessage')) {\n      message = this.props.response.categories.responseMessage;\n    }\n\n    return (\n      <div>\n        <h4>Add a new category</h4>\n        <h5>{message}</h5>\n        <div className=\"category-form\">\n          <label htmlFor=\"category-name\">Name:</label>\n          <input onChange={(e) => this.setState({categoryName: e.target.value})} value={this.state.categoryName} name={\"category-name\"} type=\"text\"/>\n          <button onClick={this.createNewCategory}>Create</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (response) => ({\n  response\n});\n\n\nconst CategoriesCreateFormContainer = connect(\n  mapStateToProps,\n  null,\n)(CategoriesCreateForm);\n\nexport default CategoriesCreateFormContainer;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { CategoriesListContainer } from './CategoriesList/CategoriesList';\nimport CategoriesCreateFormContainer from './CategoriesCreateForm/CategoriesCreateForm';\nimport { fetchCategories } from '../actions/CategoriesActions';\n\nconst CategoriesPage = ({ fetchCategories }) => {\n  useEffect(() => {\n    fetchCategories();\n  });\n\n  return (\n    <div>\n      <h2>\n        Categories\n      </h2>\n      <CategoriesCreateFormContainer/>\n      <div>\n        <CategoriesListContainer/>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCategories: () => {\n    dispatch(fetchCategories());\n  },\n});\n\nconst CategoriesPageContainer = connect(\n  null,\n  mapDispatchToProps,\n)(CategoriesPage);\n\nexport default CategoriesPageContainer;","import BaseService from './BaseService';\n\nexport default class CategoryService extends BaseService {\n  constructor() {\n    super(...arguments);\n    this.apiUri = 'recipe/';\n  }\n}\n","import React, { useState } from 'react';\nimport './SelectCategories.scss';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addCategoryToNewRecipe, removeCategoryFromNewRecipe } from '../../actions/RecipeActions/RecipeActions';\n\nconst SelectCategories = ({ categories, selectCategory, removeCategoryFromSelected }) => {\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  const setSelected = (categoryId) => {\n    if (!categoryId) return;\n    const category = categories.find(cat => cat.public_id === categoryId);\n    selectCategory(category);\n    setSelectedCategories([...selectedCategories, category]);\n  };\n\n  const removeFromSelected = (toBeRemovedCategory) => {\n    removeCategoryFromSelected(toBeRemovedCategory);\n    const newSelectedCategories = selectedCategories.filter(category => category.name !== toBeRemovedCategory.name);\n    setSelectedCategories(newSelectedCategories);\n  };\n  return (\n    <div>\n      <select onChange={(e) => setSelected(e.target.value)} className=\"Category\" id=\"\">\n        <option value=\"\">Select category</option>\n        {categories.map(category => (\n          <option key={category.public_id} onSelect={() => setSelected(category)} value={category.public_id}>{category.name}</option>\n        ))}\n      </select>\n      <div className=\"selected-categories\">\n        {selectedCategories.map((category) => (\n          <div key={category.name}>\n            <span className=\"selected\">{category.name}</span>\n            <button onClick={() => removeFromSelected(category)}>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n\nSelectCategories.propTypes = {\n  categories: propTypes.array.isRequired\n};\n\nSelectCategories.defaultProps = {\n  categories: [],\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectCategory: (category) => {\n    dispatch(addCategoryToNewRecipe(category));\n  },\n  removeCategoryFromSelected: (category) => {\n    dispatch(removeCategoryFromNewRecipe(category))\n  },\n});\n\nconst mapStateToProps = (dispatch) => ({\n  categories: dispatch.categories.categories,\n});\n\nconst SelectCategoriesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SelectCategories);\n\nexport default SelectCategories;\n\nexport { SelectCategoriesContainer };\n","import * as types from './../index';\nimport RecipeService from '../../services/RecipeService';\n\nexport const addCategoryToNewRecipe = category => ({\n  type: types.ADD_CATEGORY_TO_NEW_RECIPE,\n  payload: category\n});\n\nexport const removeCategoryFromNewRecipe = category => ({\n  type: types.REMOVE_CATEGORY_FROM_NEW_RECIPE,\n  payload: category\n});\n\nexport const fetchRecipes = recipe => {\n  return async function (dispatch) {\n    const service = new RecipeService();\n    const response = await service.fetchAll();\n    dispatch({\n      type: types.FETCH_ALL_RECIPES,\n      payload: response\n    });\n  }\n};\n\n","import React, { useState } from 'react';\nimport './SelectIngredients.scss';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addIngredientToNewRecipe } from '../../actions/RecipeActions/NewRecipeActions';\n\nconst SelectIngredients = ({ ingredients, unitsOfMeasure, addNewIngredient  }) => {\n  const [selectedIngredient, setSelectedIngredient] = useState(null);\n  const [selectedUom, setSelectedUom] = useState(null);\n  const [quantity, setQuantity] = useState(0);\n\n  const setSelectedIng = (ingredientId) => {\n    if (!ingredientId) return;\n    const ingredient = ingredients.find(ingredient => ingredient.public_id === ingredientId);\n    addNewIngredient(ingredient, selectedUom, quantity);\n    setSelectedIngredient(ingredient);\n  };\n\n  const setSelectedUnit = (uomId) => {\n    if (! uomId) return;\n    const uom = unitsOfMeasure.find(uom => uom.public_id === uomId);\n    setSelectedUom(uom);\n    if (! selectedIngredient) return;\n    addNewIngredient(selectedIngredient, uom, quantity);\n  };\n\n  const addQuantity = (qty) => {\n    setQuantity(qty);\n    if (! selectedIngredient) return;\n    addNewIngredient(selectedIngredient, selectedUom, qty);\n  };\n\n  return (\n    <div>\n      <select onChange={(e) => setSelectedIng(e.target.value)} className=\"Ingredient\" id=\"\">\n        <option value=\"\">Select ingredient</option>\n        {ingredients.map(ingredient => (\n          <option key={ingredient.public_id} value={ingredient.public_id}>{ingredient.name}</option>\n        ))}\n      </select>\n      <select onChange={(e) => setSelectedUnit(e.target.value)} className=\"Ingredient-unit-of-measure\" id=\"\">\n        <option value=\"\">Select unit of measure</option>\n        {unitsOfMeasure.map(uom => (\n          <option key={uom.public_id} value={uom.public_id}>{uom.name}</option>\n        ))}\n      </select>\n      <label htmlFor=\"quantity\">Quantity:</label>\n      <input type=\"number\" onChange={(e) => addQuantity(e.target.value)}/>\n    </div>\n  );\n};\n\n\nSelectIngredients.propTypes = {\n  ingredients: propTypes.array.isRequired\n};\n\nSelectIngredients.defaultProps = {\n  ingredients: [],\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addNewIngredient: (ingredient, uom, qty) => {\n    dispatch(addIngredientToNewRecipe(ingredient, uom, qty));\n  }\n});\n\n\nconst mapStateToProps = (dispatch) => ({\n  ingredients: dispatch.ingredients.ingredients,\n  unitsOfMeasure: dispatch.unitOfMeasure.uoms,\n});\n\nconst SelectIngredientsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SelectIngredients);\n\nexport default SelectIngredients;\n\nexport { SelectIngredientsContainer };\n","import * as types from './../index';\nimport RecipeService from '../../services/RecipeService';\n\nexport const addCategoryToNewRecipe = category => ({\n  type: types.ADD_CATEGORY_TO_NEW_RECIPE,\n  payload: category\n});\n\nexport const removeCategoryFromNewRecipe = category => ({\n  type: types.REMOVE_CATEGORY_FROM_NEW_RECIPE,\n  payload: category\n});\n\nexport const addIngredientToNewRecipe = (ingredient, unitOfMeasure, quantity) => ({\n  type: types.ADD_INGREDIENT_TO_NEW_RECIPE,\n  payload: { ingredient, unitOfMeasure, quantity }\n});\n\nexport const removeIngredientFromNewRecipe = ingredient => ({\n  type : types.REMOVE_INGREDIENT_FROM_NEW_RECIPE,\n  payload: ingredient\n});\n\nexport const addTitleToNewRecipe = title => ({\n  type: types.ADD_TITLE_TO_NEW_RECIPE,\n  payload: title\n});\n\nexport const addStepsToNewRecipe = steps => ({\n  type: types.ADD_STEPS_TO_NEW_RECIPE,\n  payload: steps\n});\n\nexport const createRecipe = recipe => {\n  return async function (dispatch) {\n    const service = new RecipeService();\n    const response = await service.createNew(recipe);\n    const requestFailed = response.status === 'fail';\n    if (requestFailed) {\n      dispatch({\n        type: types.CREATE_RECIPE_ERROR,\n        payload: response\n      });\n    } else {\n      dispatch({\n        type: types.CREATE_RECIPE_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: types.CREATE_RECIPE,\n        payload: response\n      });\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SelectCategoriesContainer } from '../SelectCategories/SelectCategories';\nimport { SelectIngredientsContainer } from \"../SelectIngredients/SelectIngredients\";\nimport { addTitleToNewRecipe, addStepsToNewRecipe, createRecipe } from '../../actions/RecipeActions/NewRecipeActions';\n\nclass RecipeCreateForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ingredientsCount: 1,\n      categories: [],\n      title: '',\n      steps: '',\n    };\n\n    this.addTitleAction = props.addTitleToNewRecipe;\n    this.addStepsToNewRecipe = props.addStepsToNewRecipe;\n    this.createRecipe = props.createRecipe;\n\n    this.createRecipeButtonHandler = this.createRecipeButtonHandler.bind(this);\n  }\n\n  createIngredients() {\n    let ingredients = [];\n    for (let x = 0; x < this.state.ingredientsCount; x++) {\n      ingredients.push(<SelectIngredientsContainer key={x}/>);\n    }\n\n    return ingredients;\n  }\n\n  setTitle(title) {\n    this.setState({\n      title\n    }, this.addTitleAction(title));\n  }\n\n  setSteps(steps) {\n    this.setState({\n      steps\n    }, this.addStepsToNewRecipe(steps));\n  }\n\n  createRecipeButtonHandler() {\n    this.createRecipe(this.props.response.NewRecipeReducer);\n  }\n\n  render() {\n    let message = '';\n\n    if (this.props.response.NewRecipeReducer.isCreated) {\n      message = 'YEY, created!'\n    }\n\n    return (\n      <div>\n        <h4>Add a new recipe</h4>\n        <h5>{message}</h5>\n        <div className=\"message\">\n          {message}\n        </div>\n        <div className=\"recipe-form\">\n          <label htmlFor=\"recipe-title\">Title:</label>\n          <input onChange={(e) => this.setTitle(e.target.value)} value={this.state.title} name={\"recipe-title\"} type=\"text\"/>\n        </div>\n        <hr/>\n        <div className=\"recipe-categories\">\n          <span>Select categories for this recipe</span>\n          <SelectCategoriesContainer/>\n        </div>\n        <hr/>\n        <div className=\"recipe-ingredients\">\n          <span>Select ingredients:</span>\n          <button onClick={() => this.setState({ingredientsCount: this.state.ingredientsCount + 1})}>Add more!</button>\n          {this.createIngredients()}\n        </div>\n        <hr/>\n        <div className=\"recipe-steps\">\n          <span>How to prepare the recipe:</span>\n          <textarea name=\"recipe-steps\" cols=\"150\" rows=\"20\" onInput={(e) => this.setSteps(e.target.value)}></textarea>\n        </div>\n        <hr/>\n        <button onClick={this.createRecipeButtonHandler}>Create</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTitleToNewRecipe: (title) => {\n    dispatch(addTitleToNewRecipe(title));\n  },\n  addStepsToNewRecipe: (steps) => {\n    dispatch(addStepsToNewRecipe(steps));\n  },\n  createRecipe: (recipe) => {\n    dispatch(createRecipe(recipe));\n  },\n});\n\nconst mapStateToProps = (response) => ({\n  response\n});\n\nconst RecipeCreateFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RecipeCreateForm);\n\nexport default RecipeCreateFormContainer;\n","import React  from 'react';\n\nconst RecipeItem = ({ recipe }) => {\n\n  debugger;\n  if (! recipe) return;\n\n  const ingredientsList = recipe.ingredients.map(ingredientData => (<div key={ingredientData.ingredient.public_id}><span>{ingredientData.ingredient.name}</span> x {ingredientData.value}<span>{ingredientData.unit_of_measure.name}</span></div>));\n  const categoriesList = recipe.categories.map(category => (<div key={category.public_id}><span>{category.name}</span></div>));\n\n  return (\n    <div className={\"ui card\"}>\n      <div className=\"content\">\n        <span className=\"header\">\n          {recipe.name}\n        </span>\n        <div className=\"description\">\n          <div className={\"ingredients-list\"}>\n            <p>Ingredients:</p>\n            {ingredientsList}\n          </div>\n          <hr/>\n          <div className=\"categories-list\">\n            <p>Categories: </p>\n            {categoriesList}\n          </div>\n          <hr/>\n          <div className=\"steps\">\n            {recipe.steps.split('\\n').map(step => <p key={step}>{step}</p>)}\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default RecipeItem;\n\n","import React  from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport RecipeItem from '../RecipeItem/RecipeItem';\n\nconst RecipesList = ({ ingredients, unitsOfMeasure, recipes  }) => {\n\n  const recipesList = recipes.map(recipe => <RecipeItem key={recipe.name} recipe={recipe}/>);\n\n  // recipes[0].steps.split('\\n')\n  return (\n    <div className=\"ui cards\">\n      {recipesList}\n    </div>\n  );\n};\n\n\nRecipesList.propTypes = {\n  ingredients: propTypes.array.isRequired,\n  unitsOfMeasure: propTypes.array.isRequired,\n  recipes: propTypes.array.isRequired,\n};\n\nRecipesList.defaultProps = {\n  ingredients: [],\n  unitsOfMeasure: [],\n  recipes: [],\n};\n\nconst mapStateToProps = (dispatch) => ({\n  ingredients: dispatch.ingredients.ingredients,\n  unitsOfMeasure: dispatch.unitOfMeasure.uoms,\n  recipes: dispatch.RecipeReducer\n});\n\nconst SelectIngredientsContainer = connect(\n  mapStateToProps,\n  null,\n)(RecipesList);\n\nexport default SelectIngredientsContainer;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchIngredients } from '../actions/IngredientsActions';\nimport { fetchCategories } from '../actions/CategoriesActions';\nimport { fetchUnitsOfMeasure } from '../actions/UnitOfMeasureActions';\nimport { fetchRecipes } from '../actions/RecipeActions/RecipeActions';\nimport RecipeCreateFormContainer from './RecipeCreateForm/RecipeCreateForm';\nimport RecipesList from './RecipesList/RecipesList';\n\n\nconst RecipePage = ({ fetchCategories, fetchIngredients, fetchUnitsOfMeasure, fetchRecipes }) => {\n  useEffect(() => {\n    fetchCategories();\n    fetchIngredients();\n    fetchUnitsOfMeasure();\n    fetchRecipes();\n  });\n\n  const [addNewRecipe, setAddNewRecipe] = useState(false);\n  return (\n    <div>\n      <div className=\"recipes-list\">\n        <RecipesList />\n      </div>\n      {addNewRecipe &&\n        <RecipeCreateFormContainer/>\n      }\n\n      <button onClick={() => setAddNewRecipe(!addNewRecipe)}>Add new recipe</button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCategories: () => {\n    dispatch(fetchCategories());\n  },\n  fetchIngredients: () => {\n    dispatch(fetchIngredients());\n  },\n  fetchUnitsOfMeasure: () => {\n    dispatch(fetchUnitsOfMeasure());\n  },\n  fetchRecipes: () => {\n    dispatch(fetchRecipes());\n  },\n});\n\nconst RecipePageContainer = connect(\n  null,\n  mapDispatchToProps,\n)(RecipePage);\n\nexport default RecipePageContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store/ConfigureStore';\nimport Router from './routes';\n// import './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Route } from 'react-router';\nimport App from '../container/App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport IndexRoute from './IndexRoute';\n\nimport LoginPage from '../components/LoginPage';\nimport RegisterPage from '../components/RegisterPage';\nimport DashboardPage from '../components/DashboardPage';\nimport UnitOfMeasurePage from '../components/UomPage';\nimport IngredientsPage from '../components/IngredientsPage';\nimport CategoriesPage from '../components/CategoriesPage';\nimport RecipePage from '../components/RecipePage';\n\nexport default () => (\n  <Router>\n    <IndexRoute path='/' component={App}/>\n    <Route path='/login' component={LoginPage} />\n    <Route path='/register' component={RegisterPage} />\n    <PrivateRoute path='/dashboard' component={DashboardPage}/>\n    <PrivateRoute path='/uoms' component={UnitOfMeasurePage}/>\n    <PrivateRoute path='/ingredients' component={IngredientsPage}/>\n    <PrivateRoute path='/categories' component={CategoriesPage}/>\n    <PrivateRoute path='/recipes' component={RecipePage}/>\n    <PrivateRoute path='/uoms/create' component={UnitOfMeasurePage}/>\n  </Router>\n);\n"],"sourceRoot":""}